$bg: darken(whitesmoke, 10);
$apple-red-light: rgb(255, 59, 48);
$apple-orange-light: rgb(255, 149, 0);
$apple-yellow-light: rgb(255, 204, 0);
$apple-green-light: rgb(52, 199, 80);
$apple-mint-light: rgb(0, 199, 190);
$apple-teal-light: rgb(48, 176, 199);
$apple-cyan-light: rgb(50, 173, 230);
$apple-blue-light: rgb(0, 122, 255);
$apple-indigo-light: rgb(88, 86, 214);
$apple-purple-light: rgb(175, 82, 222);
$apple-pink-light: rgb(255, 45, 85);
$apple-brown-light: rgb(162, 132, 94);

$red: $apple-red-light;
$green: $apple-green-light;

$theme: $apple-orange-light;
$color: white;
$bg: whitesmoke;
$bg: transparentize($bg, 0.8);
$theme: transparentize($theme, 0.25);
$bg-transition-params: 2s linear;

$colors: (
        "red": $apple-red-light,
        "pink": #ff0070,
        "orange": rgb(255, 149, 0),
        "yellow": rgb(255, 204, 0),
        "green": rgb(52, 199, 80),
        "mint": rgb(0, 199, 190),
        "teal": rgb(48, 176, 199),
        "blue": $apple-cyan-light,
        "indigo": rgb(88, 86, 214),
        "purple": rgb(175, 82, 222),
        "brown": rgb(162, 132, 94),
);

@each $name, $color in $colors {
  .theme-#{$name} {
    $c: hsl(hue($color), saturation($color), 0%);
    --primary-color-000: #{$c};

    @for $j from 0 through 9 {
      --primary-color-000-0\.#{$j}: #{transparentize($c, calc($j / 10))};
    }

    @for $i from 1 through 9 {
      $c: hsl(hue($color), saturation($color), calc($i * 10) * 1%);
      --primary-color-#{calc($i * 100)}: #{$c};

      @for $j from 0 through 9 {
        --primary-color-#{calc($i * 100)}-0\.#{$j}: #{transparentize($c, calc($j / 10))};
      }
    }
  }
}

.when-bg-img-transitions {
  // This class is added to all body elements (and the body tag itself) when the theme changes.
  // The purpose is to synchronize all kinds of color transitions, otherwise some elements have for example a
  // transition duration of 50ms, while others have one of 1s and this does not look nice, when basically the whole page
  // transitions into a new color scheme and elements apply the colors at different times (and speeds).
  // The transition delay must me manually refactored in the setTimeout functions, that remove this class.
  $p: 1s ease-in-out;
  transition: background-image $p, color $p, background $p,
  background-color $p, outline-color $p, border-color $p, box-shadow $p !important;
}
